% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jsonrepair.R
\name{JsonContext}
\alias{JsonContext}
\title{JsonContext}
\description{
Internal JSON parser class for managing parsing context stack
}
\details{
This R6 class maintains a stack-based context system for JSON parsing operations.
It tracks the current parsing state and allows for pushing/popping context values
during the parsing process. The context helps determine how to interpret different
parts of the JSON structure.
}
\section{Methods}{

\describe{
\item{\code{initialize()}}{Constructor method to create a new JsonContext instance}
\item{\code{set(value)}}{Push a new context value onto the stack. The value must be one of the valid ContextValues}
\item{\code{reset()}}{Pop the most recent context value from the stack and update current context}
\item{\code{get_current()}}{Return the current active context value}
\item{\code{is_empty()}}{Check if the context stack is empty}
}
}

\examples{
\dontrun{
ctx <- JsonContext$new()
ctx$set("object")
ctx$get_current()  # Returns "object"
ctx$reset()
ctx$is_empty()     # Returns TRUE
}
}
\keyword{internal}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{context}}{A list storing the context stack}

\item{\code{current}}{The current active context value}

\item{\code{empty}}{Logical indicating if the context stack is empty}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-JsonContext-new}{\code{JsonContext$new()}}
\item \href{#method-JsonContext-set}{\code{JsonContext$set()}}
\item \href{#method-JsonContext-reset}{\code{JsonContext$reset()}}
\item \href{#method-JsonContext-get_current}{\code{JsonContext$get_current()}}
\item \href{#method-JsonContext-is_empty}{\code{JsonContext$is_empty()}}
\item \href{#method-JsonContext-clone}{\code{JsonContext$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JsonContext-new"></a>}}
\if{latex}{\out{\hypertarget{method-JsonContext-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new JSONParser instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JsonContext$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JsonContext-set"></a>}}
\if{latex}{\out{\hypertarget{method-JsonContext-set}{}}}
\subsection{Method \code{set()}}{
Push a new context value onto the stack
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JsonContext$set(value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{Character string representing the context value. Must be one of the valid ContextValues}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method adds a new context value to the top of the context stack,
updates the current context, and marks the context as non-empty.
}

\subsection{Returns}{
No return value, called for side effects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JsonContext-reset"></a>}}
\if{latex}{\out{\hypertarget{method-JsonContext-reset}{}}}
\subsection{Method \code{reset()}}{
Pop the most recent context value from the stack
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JsonContext$reset()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method removes the top context value from the stack and updates
the current context to the previous value. If the stack becomes empty,
current is set to NULL and empty flag is set to TRUE.
}

\subsection{Returns}{
No return value, called for side effects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JsonContext-get_current"></a>}}
\if{latex}{\out{\hypertarget{method-JsonContext-get_current}{}}}
\subsection{Method \code{get_current()}}{
Get the current active context value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JsonContext$get_current()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string representing the current context value, or NULL if context is empty
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JsonContext-is_empty"></a>}}
\if{latex}{\out{\hypertarget{method-JsonContext-is_empty}{}}}
\subsection{Method \code{is_empty()}}{
Check if the context stack is empty
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JsonContext$is_empty()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical value: TRUE if the context stack is empty, FALSE otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JsonContext-clone"></a>}}
\if{latex}{\out{\hypertarget{method-JsonContext-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JsonContext$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
